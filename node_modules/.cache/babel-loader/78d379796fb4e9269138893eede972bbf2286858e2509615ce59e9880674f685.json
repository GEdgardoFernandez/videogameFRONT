{"ast":null,"code":"import axios from 'axios';\nexport const GET_ALL_GAMES = 'GET_ALL_GAMES';\nexport const GET_GAME_ID = 'GET_GAME_ID';\nexport const GET_GAME_NAME = 'GET_GAME_NAME';\nexport const CREATE_GAME = 'CREATE_GAME';\nexport const GET_GENRES = 'GET_GENRES';\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\nexport const ORDER_BY_GENRES = 'ORDER_BY_NAME';\nexport const ORDER_BY_RATING = 'ORDER_BY_NAME';\nexport const FILTER_BY_SOURCE = 'FILTER_BY_SOURCE';\nexport const SEARCH_GAMES_BY_NAME = 'SEARCH_GAMES_BY_NAME';\nexport const GET_PLATFORMS = 'GET_PLATFORMS';\nconst RUTA_VIDEOGAMES = 'http://localhost:3001/videogames';\nconst RUTA_GENRES = 'http://localhost:3001/genres';\nconst RUTA_PLATFORMS = 'http://localhost:3001/platforms';\nexport function getAllGames() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}`);\n      const allVideoGames = response.data;\n      dispatch({\n        type: GET_ALL_GAMES,\n        payload: allVideoGames\n      });\n    } catch (e) {\n      alert('I cant get all the games', e.message);\n    }\n  };\n}\n;\nexport function getGameID(id) {\n  console.log(id);\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}/${id}`);\n      const videoGameID = response.data;\n      dispatch({\n        type: GET_GAME_ID,\n        payload: videoGameID\n      });\n    } catch (e) {\n      alert('I cant get that game', e.message);\n    }\n  };\n}\n;\nexport function getGameName(name) {\n  console.log(name);\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}?name=${name}`);\n      dispatch({\n        type: GET_GAME_NAME,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error('Error fetching games by name:', error);\n    }\n  };\n}\nexport function getAllGenres() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_GENRES}`);\n      dispatch({\n        type: GET_GENRES,\n        payload: response.data\n      });\n    } catch (error) {}\n  };\n}\nexport function getAllPlatforms() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_PLATFORMS}`);\n      dispatch({\n        type: GET_PLATFORMS,\n        payload: response.data\n      });\n    } catch (error) {}\n  };\n}\nexport function createGame(payload) {\n  return async function (dispatch) {\n    try {\n      const response = axios.post(`${RUTA_VIDEOGAMES}}`, payload);\n      const videoGame = response.data;\n      dispatch({\n        type: CREATE_GAME,\n        payload: videoGame\n      });\n    } catch (e) {\n      alert('I cant create that game', e.message);\n    }\n  };\n}\n;\nexport function orderByName(order) {\n  return {\n    type: ORDER_BY_NAME,\n    payload: order\n  };\n}\n;\nexport function orderByGenres(payload) {\n  return function (dispatch) {\n    return dispatch({\n      type: ORDER_BY_GENRES,\n      payload\n    });\n  };\n}\n;\nexport function orderByRating(payload) {\n  return function (dispatch) {\n    return dispatch({\n      type: ORDER_BY_RATING,\n      payload\n    });\n  };\n}\n;\nexport function filterBySource(source) {\n  return {\n    type: FILTER_BY_SOURCE,\n    payload: source\n  };\n}","map":{"version":3,"names":["axios","GET_ALL_GAMES","GET_GAME_ID","GET_GAME_NAME","CREATE_GAME","GET_GENRES","ORDER_BY_NAME","ORDER_BY_GENRES","ORDER_BY_RATING","FILTER_BY_SOURCE","SEARCH_GAMES_BY_NAME","GET_PLATFORMS","RUTA_VIDEOGAMES","RUTA_GENRES","RUTA_PLATFORMS","getAllGames","dispatch","response","get","allVideoGames","data","type","payload","e","alert","message","getGameID","id","console","log","videoGameID","getGameName","name","error","getAllGenres","getAllPlatforms","createGame","post","videoGame","orderByName","order","orderByGenres","orderByRating","filterBySource","source"],"sources":["C:/Users/bff08/Desktop/PI-Videogames-main/client/src/Redux/Actions.js"],"sourcesContent":["import axios from 'axios';\n\nexport const GET_ALL_GAMES = 'GET_ALL_GAMES'\nexport const GET_GAME_ID = 'GET_GAME_ID'\nexport const GET_GAME_NAME = 'GET_GAME_NAME'\nexport const CREATE_GAME = 'CREATE_GAME'\nexport const GET_GENRES = 'GET_GENRES'\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME'\nexport const ORDER_BY_GENRES = 'ORDER_BY_NAME'\nexport const ORDER_BY_RATING = 'ORDER_BY_NAME'\nexport const FILTER_BY_SOURCE = 'FILTER_BY_SOURCE'\nexport const SEARCH_GAMES_BY_NAME = 'SEARCH_GAMES_BY_NAME'\nexport const GET_PLATFORMS ='GET_PLATFORMS'\n\nconst RUTA_VIDEOGAMES = 'http://localhost:3001/videogames'\nconst RUTA_GENRES = 'http://localhost:3001/genres'\nconst RUTA_PLATFORMS = 'http://localhost:3001/platforms'\n\nexport function getAllGames() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}`)\n      const allVideoGames = response.data\n      dispatch({\n        type: GET_ALL_GAMES,\n        payload: allVideoGames\n\n      })\n    } catch (e) {\n      alert('I cant get all the games', e.message)\n    }\n  }\n};\n\nexport function getGameID(id) {\n  console.log(id)\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}/${id}`)\n      const videoGameID = response.data\n\n      dispatch({\n        type: GET_GAME_ID,\n        payload: videoGameID\n      })\n    } catch (e) {\n      alert('I cant get that game', e.message)\n    }\n  }\n};\n\nexport function getGameName(name) {\n  console.log(name)\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}?name=${name}`);\n      dispatch({\n        type: GET_GAME_NAME,\n        payload: response.data,\n      });\n    } catch (error) {\n      console.error('Error fetching games by name:', error);\n    }\n  }\n}\n\nexport function getAllGenres() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_GENRES}`);\n      dispatch({\n        type: GET_GENRES,\n        payload: response.data,\n      });\n    } catch (error) {\n    }\n  }\n}\nexport function getAllPlatforms(){\n  return async function(dispatch){\n    try {\n      const response = await axios.get(`${RUTA_PLATFORMS}`);\n      dispatch({\n        type: GET_PLATFORMS,\n        payload: response.data\n      })\n    } catch (error) {\n      \n    }\n  }\n}\nexport function createGame(payload) {\n  return async function (dispatch) {\n    try {\n      const response = axios.post(`${RUTA_VIDEOGAMES}}`, payload)\n      const videoGame = response.data\n      dispatch({\n        type: CREATE_GAME,\n        payload: videoGame\n      })\n    } catch (e) {\n      alert('I cant create that game', e.message)\n    }\n  }\n};\n\n\nexport function orderByName(order) {\n  return {\n    type: ORDER_BY_NAME,\n    payload: order,\n  };\n};\n\nexport function orderByGenres(payload) {\n  return function (dispatch) {\n    return dispatch({ type: ORDER_BY_GENRES, payload })\n  }\n};\n\nexport function orderByRating(payload) {\n  return function (dispatch) {\n    return dispatch({ type: ORDER_BY_RATING, payload })\n  }\n};\n\nexport function filterBySource(source) {\n  return {\n    type: FILTER_BY_SOURCE,\n    payload: source\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}