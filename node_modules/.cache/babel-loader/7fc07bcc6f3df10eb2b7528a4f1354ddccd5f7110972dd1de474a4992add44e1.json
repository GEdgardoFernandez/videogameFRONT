{"ast":null,"code":"import { GET_ALL_GAMES, GET_GAME_ID, GET_GAME_NAME, CREATE_GAME, GET_GENRES, ORDER_BY_NAME, ORDER_BY_GENRES, ORDER_BY_RATING, ORDER_BY_SOURCE, SEARCH_GAMES_BY_NAME, GET_PLATFORMS } from './Actions';\nconst inicialSate = {\n  filteredGames: [],\n  videogames: [],\n  videogame: [],\n  genres: [],\n  platforms: []\n};\nfunction rootReducer(state = inicialSate, action) {\n  switch (action.type) {\n    case GET_ALL_GAMES:\n      const uniqueGames = action.payload.filter((game, index, self) => index === self.findIndex(g => g.id === game.id));\n      let platforms = [];\n      action.payload.map(e => platforms = [...platforms, ...e.platforms]);\n      return {\n        ...state,\n        videogames: action.payload,\n        filteredGames: uniqueGames,\n        platforms: Array.from(new Set(platforms))\n      };\n    case GET_GAME_ID:\n      return {\n        ...state,\n        //copia estado importante no olvidar\n        videogame: action.payload\n      };\n    case SEARCH_GAMES_BY_NAME:\n      return {\n        ...state,\n        filteredGames: action.payload\n      };\n    case GET_GAME_NAME:\n      return {\n        ...state,\n        filteredGames: action.payload\n      };\n    case CREATE_GAME:\n      return {};\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platforms: action.payload\n      };\n    case ORDER_BY_NAME:\n      let sortedGames = [...state.filteredGames];\n      if (action.payload === 'A-Z') {\n        sortedGames.sort((a, b) => a.name.localeCompare(b.name));\n      } else if (action.payload === 'Z-A') {\n        sortedGames.sort((a, b) => b.name.localeCompare(a.name));\n      } else if (action.payload === 'Highest-Rating') {\n        sortedGames.sort((a, b) => b.rating - a.rating);\n      } else if (action.payload === 'Lowest-Rating') {\n        sortedGames.sort((a, b) => a.rating - b.rating);\n      }\n      return {\n        ...state,\n        filteredGames: sortedGames\n      };\n    case ORDER_BY_GENRES:\n      return {};\n    case ORDER_BY_SOURCE:\n      const getVideoGames = state.allVideoGames;\n      const filterVG = action.payload === 'DB' ? getVideoGames.filter(g => g.createdInDB) : getVideoGames.filter(e => !e.createdInDB);\n      return {\n        ...state,\n        videogames: action.payload === 'All games' ? getVideoGames : filterVG\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_GAMES","GET_GAME_ID","GET_GAME_NAME","CREATE_GAME","GET_GENRES","ORDER_BY_NAME","ORDER_BY_GENRES","ORDER_BY_RATING","ORDER_BY_SOURCE","SEARCH_GAMES_BY_NAME","GET_PLATFORMS","inicialSate","filteredGames","videogames","videogame","genres","platforms","rootReducer","state","action","type","uniqueGames","payload","filter","game","index","self","findIndex","g","id","map","e","Array","from","Set","sortedGames","sort","a","b","name","localeCompare","rating","getVideoGames","allVideoGames","filterVG","createdInDB"],"sources":["C:/Users/bff08/Desktop/PI-Videogames-main/client/src/Redux/Reducer.js"],"sourcesContent":["import {\n  GET_ALL_GAMES,\n  GET_GAME_ID,\n  GET_GAME_NAME,\n  CREATE_GAME,\n  GET_GENRES,\n  ORDER_BY_NAME,\n  ORDER_BY_GENRES,\n  ORDER_BY_RATING,\n  ORDER_BY_SOURCE,\n  SEARCH_GAMES_BY_NAME,\n  GET_PLATFORMS,\n} from './Actions';\n\nconst inicialSate = {\n  filteredGames: [],\n  videogames: [],\n  videogame: [],\n  genres: [],\n  platforms: [],\n\n}\n\nfunction rootReducer(state = inicialSate, action) {\n\n  switch (action.type) {\n    case GET_ALL_GAMES:\n      const uniqueGames = action.payload.filter(\n        (game, index, self) => index === self.findIndex(g => g.id === game.id)\n      );\n      let platforms = [];\n      action.payload.map(e => platforms = [...platforms, ...e.platforms]);\n      return {\n        ...state,\n        videogames: action.payload,\n        filteredGames: uniqueGames,\n        platforms: Array.from(new Set(platforms)),\n      };\n    case GET_GAME_ID:\n      return {\n        ...state,//copia estado importante no olvidar\n        videogame: action.payload\n      };\n    case SEARCH_GAMES_BY_NAME:\n\n      return {\n        ...state,\n        filteredGames: action.payload\n\n      };\n    case GET_GAME_NAME:\n      return {\n        ...state,\n        filteredGames: action.payload\n\n      };\n      \n    case CREATE_GAME:\n      return {\n      };\n      \n    case GET_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platforms: action.payload\n      }\n    case ORDER_BY_NAME:\n      let sortedGames = [...state.filteredGames];\n      if (action.payload === 'A-Z') {\n        sortedGames.sort((a, b) => a.name.localeCompare(b.name));\n      } else if (action.payload === 'Z-A') {\n        sortedGames.sort((a, b) => b.name.localeCompare(a.name));\n      } else if (action.payload === 'Highest-Rating') {\n        sortedGames.sort((a, b) => b.rating - a.rating);\n      } else if (action.payload === 'Lowest-Rating') {\n        sortedGames.sort((a, b) => a.rating - b.rating);\n      }\n      return {\n        ...state,\n        filteredGames: sortedGames,\n      };\n      \n\n    case ORDER_BY_GENRES:\n      return {\n\n      }\n      \n    case ORDER_BY_SOURCE:\n      const getVideoGames = state.allVideoGames\n      const filterVG = action.payload === 'DB' ? getVideoGames.filter(g => g.createdInDB)\n        : getVideoGames.filter(e => !e.createdInDB)\n      return {\n        ...state,\n        videogames: action.payload === 'All games' ? getVideoGames : filterVG\n      }\n    default: return state\n  }\n}\n\nexport default rootReducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}