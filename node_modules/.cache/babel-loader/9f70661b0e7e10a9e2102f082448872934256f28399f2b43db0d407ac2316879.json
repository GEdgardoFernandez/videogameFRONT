{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bff08\\\\Desktop\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\GamesCards\\\\GamesCards.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport style from './GamesCards.module.css';\nimport CardGame from '../CardGame/CardGame';\nimport Pagination from '../Pagination/Pagination';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GamesCards() {\n  _s();\n  const location = useLocation();\n  const [games, setGames] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchGames = async () => {\n      try {\n        let url = '';\n        if (location.pathname === '/home') {\n          url = `http://localhost:3001/videogames?page=${currentPage}&pageSize=15`; // Agrega los parámetros de paginación\n        } else if (location.pathname === '/genres') {\n          url = `http://localhost:3001/genres?page=${currentPage}&pageSize=10`; // Agrega los parámetros de paginación\n        }\n        const response = await axios.get(url);\n        const games = response.data;\n        const {\n          totalPages\n        } = response.data;\n        setTotalPages(totalPages);\n        setGames(games);\n      } catch (error) {\n        console.error('Error fetching games:', error);\n      }\n    };\n    fetchGames();\n  }, [location.pathname, currentPage]);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.containerCards,\n    children: [games.map(game => /*#__PURE__*/_jsxDEV(CardGame, {\n      name: game.name,\n      image: game.image,\n      genre: game.genres.join(', ')\n    }, game.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)), games.length > 0 &&\n    /*#__PURE__*/\n    // Renderiza la paginación solo si hay juegos disponibles\n    _jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onPageChange: handlePageChange,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(GamesCards, \"gsgNAvfCP2rfCMmS6KdDM7SqooY=\", false, function () {\n  return [useLocation];\n});\n_c = GamesCards;\nvar _c;\n$RefreshReg$(_c, \"GamesCards\");","map":{"version":3,"names":["useEffect","useState","axios","style","CardGame","Pagination","useLocation","jsxDEV","_jsxDEV","GamesCards","_s","location","games","setGames","currentPage","setCurrentPage","totalPages","setTotalPages","fetchGames","url","pathname","response","get","data","error","console","handlePageChange","pageNumber","className","containerCards","children","map","game","name","image","genre","genres","join","key","fileName","_jsxFileName","lineNumber","columnNumber","length","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/bff08/Desktop/PI-Videogames-main/client/src/components/GamesCards/GamesCards.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport style from './GamesCards.module.css';\r\nimport CardGame from '../CardGame/CardGame';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function GamesCards() {\r\n  const location = useLocation();\r\n  const [games, setGames] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchGames = async () => {\r\n      try {\r\n        let url = '';\r\n        if (location.pathname === '/home') {\r\n          url = `http://localhost:3001/videogames?page=${currentPage}&pageSize=15`; // Agrega los parámetros de paginación\r\n        } else if (location.pathname === '/genres') {\r\n          url = `http://localhost:3001/genres?page=${currentPage}&pageSize=10`; // Agrega los parámetros de paginación\r\n        }\r\n        const response = await axios.get(url);\r\n        const games = response.data;\r\n        const { totalPages } = response.data\r\n        setTotalPages(totalPages);\r\n        setGames(games);\r\n      } catch (error) {\r\n        console.error('Error fetching games:', error);\r\n      }\r\n    };\r\n    fetchGames();\r\n  }, [location.pathname, currentPage]);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div className={style.containerCards}>\r\n      {games.map((game) => (\r\n                <CardGame\r\n                  key={game.key}\r\n                  name={game.name}\r\n                  image={game.image}\r\n                  genre={game.genres.join(', ')}\r\n                />\r\n      ))}\r\n         {games.length > 0 && ( // Renderiza la paginación solo si hay juegos disponibles\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          onPageChange={handlePageChange}\r\n          totalPages={totalPages}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAIC,GAAG,GAAG,EAAE;QACZ,IAAIR,QAAQ,CAACS,QAAQ,KAAK,OAAO,EAAE;UACjCD,GAAG,GAAI,yCAAwCL,WAAY,cAAa,CAAC,CAAC;QAC5E,CAAC,MAAM,IAAIH,QAAQ,CAACS,QAAQ,KAAK,SAAS,EAAE;UAC1CD,GAAG,GAAI,qCAAoCL,WAAY,cAAa,CAAC,CAAC;QACxE;QACA,MAAMO,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAACH,GAAG,CAAC;QACrC,MAAMP,KAAK,GAAGS,QAAQ,CAACE,IAAI;QAC3B,MAAM;UAAEP;QAAW,CAAC,GAAGK,QAAQ,CAACE,IAAI;QACpCN,aAAa,CAACD,UAAU,CAAC;QACzBH,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACP,QAAQ,CAACS,QAAQ,EAAEN,WAAW,CAAC,CAAC;EAEpC,MAAMY,gBAAgB,GAAIC,UAAU,IAAK;IACvCZ,cAAc,CAACY,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAEzB,KAAK,CAAC0B,cAAe;IAAAC,QAAA,GAClClB,KAAK,CAACmB,GAAG,CAAEC,IAAI,iBACNxB,OAAA,CAACJ,QAAQ;MAEP6B,IAAI,EAAED,IAAI,CAACC,IAAK;MAChBC,KAAK,EAAEF,IAAI,CAACE,KAAM;MAClBC,KAAK,EAAEH,IAAI,CAACI,MAAM,CAACC,IAAI,CAAC,IAAI;IAAE,GAHzBL,IAAI,CAACM,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACV,CAAC,EACE9B,KAAK,CAAC+B,MAAM,GAAG,CAAC;IAAA;IAAM;IACxBnC,OAAA,CAACH,UAAU;MACTS,WAAW,EAAEA,WAAY;MACzB8B,YAAY,EAAElB,gBAAiB;MAC/BV,UAAU,EAAEA;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChC,EAAA,CAlDuBD,UAAU;EAAA,QACfH,WAAW;AAAA;AAAAuC,EAAA,GADNpC,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}