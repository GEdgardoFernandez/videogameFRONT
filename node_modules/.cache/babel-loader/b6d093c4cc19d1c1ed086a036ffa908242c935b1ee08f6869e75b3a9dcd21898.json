{"ast":null,"code":"import { GET_ALL_GAMES, GET_GAME_ID, GET_GAME_NAME, CREATE_GAME, GET_GENRES, ORDER_BY_NAME, FILTER_BY_SOURCE, SEARCH_GAMES_BY_NAME, GET_PLATFORMS } from './Actions';\nconst initialState = {\n  allGames: [],\n  filteredGames: [],\n  videogames: [],\n  videogame: [],\n  genres: [],\n  platforms: [],\n  sourceFilter: 'both',\n  restoreGames: []\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_GAMES:\n      const uniqueGames = action.payload.filter((game, index, self) => index === self.findIndex(g => g.id === game.id));\n      let platforms = [];\n      action.payload.map(e => platforms = [...platforms, ...e.platforms]);\n      return {\n        ...state,\n        allGames: uniqueGames,\n        filteredGames: uniqueGames,\n        restoreGames: uniqueGames,\n        platforms: Array.from(new Set(platforms))\n      };\n    case GET_GAME_ID:\n      return {\n        ...state,\n        videogame: action.payload\n      };\n    case SEARCH_GAMES_BY_NAME:\n      return {\n        ...state,\n        filteredGames: action.payload\n      };\n    case GET_GAME_NAME:\n      return {\n        ...state,\n        filteredGames: action.payload\n      };\n    case CREATE_GAME:\n      console.log(action.payload);\n      return {\n        ...state,\n        videogame: [...state.videogame, action.payload]\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platforms: action.payload\n      };\n    case ORDER_BY_NAME:\n      let sortedGames = [...state.filteredGames];\n      if (action.payload === 'A-Z') {\n        sortedGames.sort((a, b) => a.name.localeCompare(b.name));\n      } else if (action.payload === 'Z-A') {\n        sortedGames.sort((a, b) => b.name.localeCompare(a.name));\n      } else if (action.payload === 'Highest-Rating') {\n        sortedGames.sort((a, b) => b.rating - a.rating);\n      } else if (action.payload === 'Lowest-Rating') {\n        sortedGames.sort((a, b) => a.rating - b.rating);\n      }\n      return {\n        ...state,\n        filteredGames: sortedGames\n      };\n    case FILTER_BY_SOURCE:\n      let sourceFilteredGames = [];\n      if (action.payload === 'api') {\n        sourceFilteredGames = state.allGames.filter(game => typeof game.id === 'number');\n      } else if (action.payload === 'db') {\n        sourceFilteredGames = state.allGames.filter(game => typeof game.id !== \"number\");\n      } else {\n        sourceFilteredGames = state.allGames.filter(game => typeof game.id === 'number' || typeof game.id !== \"number\");\n      }\n      return {\n        ...state,\n        filteredGames: sourceFilteredGames\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_GAMES","GET_GAME_ID","GET_GAME_NAME","CREATE_GAME","GET_GENRES","ORDER_BY_NAME","FILTER_BY_SOURCE","SEARCH_GAMES_BY_NAME","GET_PLATFORMS","initialState","allGames","filteredGames","videogames","videogame","genres","platforms","sourceFilter","restoreGames","rootReducer","state","action","type","uniqueGames","payload","filter","game","index","self","findIndex","g","id","map","e","Array","from","Set","console","log","sortedGames","sort","a","b","name","localeCompare","rating","sourceFilteredGames"],"sources":["C:/Users/bff08/Desktop/PI-Videogames-main/client/src/Redux/Reducer.js"],"sourcesContent":["import {\n  GET_ALL_GAMES,\n  GET_GAME_ID,\n  GET_GAME_NAME,\n  CREATE_GAME,\n  GET_GENRES,\n  ORDER_BY_NAME,\n  FILTER_BY_SOURCE,\n  SEARCH_GAMES_BY_NAME,\n  GET_PLATFORMS,\n} from './Actions';\n\nconst initialState = {\n  allGames: [],\n  filteredGames: [],\n  videogames: [],\n  videogame: [],\n  genres: [],\n  platforms: [],\n  sourceFilter: 'both',\n  restoreGames: [],\n}\n\nfunction rootReducer(state = initialState, action) {\n\n  switch (action.type) {\n    case GET_ALL_GAMES:\n      const uniqueGames = action.payload.filter(\n        (game, index, self) => index === self.findIndex(g => g.id === game.id)\n      );\n      let platforms = [];\n      action.payload.map(e => platforms = [...platforms, ...e.platforms]);\n      return {\n        ...state,\n        allGames: uniqueGames,\n        filteredGames: uniqueGames,\n        restoreGames: uniqueGames,\n        platforms: Array.from(new Set(platforms)),\n      };\n\n    case GET_GAME_ID:\n      return {\n        ...state,\n        videogame: action.payload\n      };\n    case SEARCH_GAMES_BY_NAME:\n\n      return {\n        ...state,\n        filteredGames: action.payload\n\n      };\n    case GET_GAME_NAME:\n      return {\n        ...state,\n        filteredGames: action.payload\n\n      };\n\n    case CREATE_GAME:\n      console.log(action.payload)\n      return {\n        ...state,\n        videogame: [...state.videogame, action.payload],\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platforms: action.payload\n      }\n    case ORDER_BY_NAME:\n      let sortedGames = [...state.filteredGames];\n      if (action.payload === 'A-Z') {\n        sortedGames.sort((a, b) => a.name.localeCompare(b.name));\n      } else if (action.payload === 'Z-A') {\n        sortedGames.sort((a, b) => b.name.localeCompare(a.name));\n      } else if (action.payload === 'Highest-Rating') {\n        sortedGames.sort((a, b) => b.rating - a.rating);\n      } else if (action.payload === 'Lowest-Rating') {\n        sortedGames.sort((a, b) => a.rating - b.rating);\n      }\n      return {\n        ...state,\n        filteredGames: sortedGames,\n      };\n\n    case FILTER_BY_SOURCE:\n      let sourceFilteredGames = [];\n      if (action.payload === 'api') {\n        sourceFilteredGames = state.allGames.filter(game => typeof game.id === 'number');\n      } else if (action.payload === 'db') {\n        sourceFilteredGames = state.allGames.filter(game => typeof game.id !== \"number\");\n      } else {\n        sourceFilteredGames = state.allGames.filter(game => typeof game.id === 'number' || typeof game.id !== \"number\");\n      }\n      return {\n        ...state,\n        filteredGames: sourceFilteredGames,\n      };\n    default: return state\n  }\n}\n\nexport default rootReducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}