{"ast":null,"code":"import axios from 'axios';\nexport const GET_ALL_GAMES = 'GET_ALL_GAMES';\nexport const GET_GAME_ID = 'GET_GAME_ID';\nexport const GET_GAME_NAME = 'GET_GAME_NAME';\nexport const CREATE_GAME = 'CREATE_GAME';\nexport const GET_GENRES = 'GET_GENRES';\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\nexport const FILTER_BY_SOURCE = 'FILTER_BY_SOURCE';\nexport const SEARCH_GAMES_BY_NAME = 'SEARCH_GAMES_BY_NAME';\nexport const GET_PLATFORMS = 'GET_PLATFORMS';\nconst RUTA_VIDEOGAMES = 'http://localhost:3001/videogames';\nconst RUTA_GENRES = 'http://localhost:3001/genres';\nconst RUTA_PLATFORMS = 'http://localhost:3001/platforms';\nexport function getAllGames() {\n  return async dispatch => {\n    try {\n      const response = await fetch('RUTA_VIDEOGAMES');\n      const data = await response.json();\n      dispatch({\n        type: GET_ALL_GAMES,\n        payload: data\n      });\n    } catch (error) {\n      console.error('Error fetching games:', error);\n      dispatch({\n        type: GET_ALL_GAMES,\n        payload: []\n      });\n    }\n  };\n}\nexport function getGameID(id) {\n  console.log(id);\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}/${id}`);\n      const videoGameID = response.data;\n      dispatch({\n        type: GET_GAME_ID,\n        payload: videoGameID\n      });\n    } catch (e) {\n      alert('I cant get that game', e.message);\n    }\n  };\n}\n;\nexport function getGameName(name) {\n  console.log(name);\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}?name=${name}`);\n      dispatch({\n        type: GET_GAME_NAME,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error('Error fetching games by name:', error);\n    }\n  };\n}\nexport function getAllGenres() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_GENRES}`);\n      dispatch({\n        type: GET_GENRES,\n        payload: response.data\n      });\n    } catch (error) {}\n  };\n}\nexport function getAllPlatforms() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_PLATFORMS}`);\n      dispatch({\n        type: GET_PLATFORMS,\n        payload: response.data\n      });\n    } catch (error) {}\n  };\n}\nexport function createGame(payload) {\n  return async function (dispatch) {\n    try {\n      const response = axios.post(`${RUTA_VIDEOGAMES}}`, payload);\n      const videoGame = response.data;\n      dispatch({\n        type: CREATE_GAME,\n        payload: videoGame\n      });\n    } catch (e) {\n      alert('I cant create that game', e.message);\n    }\n  };\n}\n;\nexport function orderByName(order) {\n  return {\n    type: ORDER_BY_NAME,\n    payload: order\n  };\n}\n;\nexport function filterBySource(source) {\n  return {\n    type: FILTER_BY_SOURCE,\n    payload: source\n  };\n}","map":{"version":3,"names":["axios","GET_ALL_GAMES","GET_GAME_ID","GET_GAME_NAME","CREATE_GAME","GET_GENRES","ORDER_BY_NAME","FILTER_BY_SOURCE","SEARCH_GAMES_BY_NAME","GET_PLATFORMS","RUTA_VIDEOGAMES","RUTA_GENRES","RUTA_PLATFORMS","getAllGames","dispatch","response","fetch","data","json","type","payload","error","console","getGameID","id","log","get","videoGameID","e","alert","message","getGameName","name","getAllGenres","getAllPlatforms","createGame","post","videoGame","orderByName","order","filterBySource","source"],"sources":["C:/Users/bff08/Desktop/PI-Videogames-main/client/src/Redux/Actions.js"],"sourcesContent":["import axios from 'axios';\n\nexport const GET_ALL_GAMES = 'GET_ALL_GAMES'\nexport const GET_GAME_ID = 'GET_GAME_ID'\nexport const GET_GAME_NAME = 'GET_GAME_NAME'\nexport const CREATE_GAME = 'CREATE_GAME'\nexport const GET_GENRES = 'GET_GENRES'\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME'\nexport const FILTER_BY_SOURCE = 'FILTER_BY_SOURCE'\nexport const SEARCH_GAMES_BY_NAME = 'SEARCH_GAMES_BY_NAME'\nexport const GET_PLATFORMS = 'GET_PLATFORMS'\n\nconst RUTA_VIDEOGAMES = 'http://localhost:3001/videogames'\nconst RUTA_GENRES = 'http://localhost:3001/genres'\nconst RUTA_PLATFORMS = 'http://localhost:3001/platforms'\n\nexport function getAllGames() {\n  return async (dispatch) => {\n    try {\n      const response = await fetch('RUTA_VIDEOGAMES');\n      const data = await response.json();\n      dispatch({\n        type: GET_ALL_GAMES,\n        payload: data,\n      });\n    } catch (error) {\n      console.error('Error fetching games:', error);\n      dispatch({\n        type: GET_ALL_GAMES,\n        payload: [],\n      });\n    }\n  };\n}\nexport function getGameID(id) {\n  console.log(id)\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}/${id}`)\n      const videoGameID = response.data\n\n      dispatch({\n        type: GET_GAME_ID,\n        payload: videoGameID\n      })\n    } catch (e) {\n      alert('I cant get that game', e.message)\n    }\n  }\n};\n\nexport function getGameName(name) {\n  console.log(name)\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_VIDEOGAMES}?name=${name}`);\n      dispatch({\n        type: GET_GAME_NAME,\n        payload: response.data,\n      });\n    } catch (error) {\n      console.error('Error fetching games by name:', error);\n    }\n  }\n}\n\nexport function getAllGenres() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_GENRES}`);\n      dispatch({\n        type: GET_GENRES,\n        payload: response.data,\n      });\n    } catch (error) {\n    }\n  }\n}\nexport function getAllPlatforms() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`${RUTA_PLATFORMS}`);\n      dispatch({\n        type: GET_PLATFORMS,\n        payload: response.data\n      })\n    } catch (error) {\n\n    }\n  }\n}\nexport function createGame(payload) {\n  return async function (dispatch) {\n    try {\n      const response = axios.post(`${RUTA_VIDEOGAMES}}`, payload)\n      const videoGame = response.data\n      dispatch({\n        type: CREATE_GAME,\n        payload: videoGame\n      })\n    } catch (e) {\n      alert('I cant create that game', e.message)\n    }\n  }\n};\n\n\nexport function orderByName(order) {\n  return {\n    type: ORDER_BY_NAME,\n    payload: order,\n  };\n};\n\nexport function filterBySource(source) {\n  return {\n    type: FILTER_BY_SOURCE,\n    payload: source\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}